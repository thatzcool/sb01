3. 서비스 계층과 DTO 구현
   BoardRepository 의 메소드는 서비스 계층을 통해서 DTO 변환되어 처리되도록 구성한다.
   엔티티 객체는(BoardEntity) 영속 컨텍스트에서 관리되므로 가능하면 많은 계층에서 사용되지 않는 것이 좋다.
   이를 위해 ModelMapper 설정을 하도록 한다.

   ModelMapper : DTO 와 엔티티 간의 변환 처리를 간단히 처리하기 위해

   -프로젝트에 config 패키지에 RootConfig 클래스를 생성 한다.
   -dto 패키지 : BoardDTO
   -service 패키지 : BoardService(메소드 정의)   BoardServiceImpl
   -BoardService(메소드 정의)
    등록 : Long register(BoardDTO boardDTO);
    조회 : 특정한 게시물의 번호를 이용하므로  BoardDTO readOne(Long bno);
    전체목록 조회 :   list()
    수정 : 기존의 엔티티 객체에서 필요한 부분만 변경하도록 작성해야 한다.   void modify(BoradDTO boardDTO);
    삭제 : 삭제 처리는 게시물의 번호(bno) 만이 필요함  void remove(Long bno);
   -BoardServiceImpl
    ModelMapper 와 BoardRepository 주입 받아 구현한다.

    ***목록/검색 처리
    PageRequestDTO, PageResponseDTO(리턴타입으로 활용) 는 유지하여 검색타입과 키워드를 처리한다.



